import {
  MigrationInterface, 
  QueryRunner, 
  Table, 
  TableIndex, 
  TableColumn, 
  TableForeignKey,
  TableUnique
// } = require("typeorm");
} from "typeorm";
// import { InsertStatement } from './seed-data/account-table';

/**
 * To run change file suffix from -ts to .ts and issue one of the commands below
 *   Command for Dev : npm run typeorm  migration:run
 *   Command for Test: npm run typeorm:test migration:run
 * Change suffix back to -ts
 */

const TABLE_NAME = "contact_acct_rel";
const TABLE_OWNER = "postgres";

export class ContactAcctRel1676585376640 implements MigrationInterface {
  /* Create Table */
  public async up(queryRunner: QueryRunner): Promise<void> {
    console.log(`TABLE MIGRATION FOR => ${TABLE_NAME} TABLE`);

  await queryRunner.query(`
    CREATE TABLE IF NOT EXISTS ${TABLE_NAME}
    (
      id           SERIAL PRIMARY KEY,
      account_id   integer   NOT NULL,
      contact_id   integer   NOT NULL,
      create_date timestamp with time zone NOT NULL DEFAULT now(),
      CONSTRAINT fk_contact FOREIGN KEY (contact_id) REFERENCES contact (id)
    )
    TABLESPACE pg_default;
    ALTER TABLE ${TABLE_NAME} OWNER to ${TABLE_OWNER};
    CREATE INDEX "idx_contact_id"
      ON ${TABLE_NAME} USING btree
      (contact_id ASC NULLS LAST)
      TABLESPACE pg_default;
    CREATE UNIQUE INDEX "idx_account_id"
      ON contact USING btree
      (account_id ASC)
      TABLESPACE pg_default;
  `);

    /* Insert Seed Data into Account Table*/
    // await queryRunner.query(InsertStatement);

  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    console.log(`REVERT MIGRATION FOR '${TABLE_NAME}' TABLE `);
    // await queryRunner.dropTable(TABLE_NAME);
    await queryRunner.query(`
        DROP TABLE ${TABLE_NAME};
    `);
  }
}
